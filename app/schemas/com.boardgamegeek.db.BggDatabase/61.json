{
  "formatVersion": 1,
  "database": {
    "version": 61,
    "identityHash": "30c9475b67dabe0e6fa7ef6a3c9c15c7",
    "entities": [
      {
        "tableName": "designers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `designer_id` INTEGER NOT NULL, `designer_name` TEXT NOT NULL, `designer_description` TEXT, `designer_image_url` TEXT, `designer_thumbnail_url` TEXT, `designer_hero_image_url` TEXT, `designer_images_updated_timestamp` INTEGER, `whitmore_score` INTEGER, `designer_stats_updated_timestamp` INTEGER, `updated` INTEGER)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "designerId",
            "columnName": "designer_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "designerName",
            "columnName": "designer_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "designerDescription",
            "columnName": "designer_description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "designerImageUrl",
            "columnName": "designer_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "designerThumbnailUrl",
            "columnName": "designer_thumbnail_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "designerHeroImageUrl",
            "columnName": "designer_hero_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imagesUpdatedTimestamp",
            "columnName": "designer_images_updated_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "whitmoreScore",
            "columnName": "whitmore_score",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "statsUpdatedTimestamp",
            "columnName": "designer_stats_updated_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedTimestamp",
            "columnName": "updated",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "artists",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `artist_id` INTEGER NOT NULL, `artist_name` TEXT NOT NULL, `artist_description` TEXT, `artist_image_url` TEXT, `artist_thumbnail_url` TEXT, `artist_hero_image_url` TEXT, `artist_images_updated_timestamp` INTEGER, `whitmore_score` INTEGER, `artist_stats_updated_timestamp` INTEGER, `updated` INTEGER)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "artistId",
            "columnName": "artist_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "artistName",
            "columnName": "artist_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artistDescription",
            "columnName": "artist_description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "artistImageUrl",
            "columnName": "artist_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "artistThumbnailUrl",
            "columnName": "artist_thumbnail_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "artistHeroImageUrl",
            "columnName": "artist_hero_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imagesUpdatedTimestamp",
            "columnName": "artist_images_updated_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "whitmoreScore",
            "columnName": "whitmore_score",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "statsUpdatedTimestamp",
            "columnName": "artist_stats_updated_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedTimestamp",
            "columnName": "updated",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [
          {
            "name": "index_artists_artist_id",
            "unique": true,
            "columnNames": [
              "artist_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_artists_artist_id` ON `${TABLE_NAME}` (`artist_id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "publishers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `publisher_id` INTEGER NOT NULL, `publisher_name` TEXT NOT NULL, `publisher_sort_name` TEXT, `publisher_description` TEXT, `publisher_image_url` TEXT, `publisher_thumbnail_url` TEXT, `publisher_hero_image_url` TEXT, `whitmore_score` INTEGER, `publisher_stats_updated_timestamp` INTEGER, `updated` INTEGER)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "publisherId",
            "columnName": "publisher_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "publisherName",
            "columnName": "publisher_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publisherSortName",
            "columnName": "publisher_sort_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publisherDescription",
            "columnName": "publisher_description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publisherImageUrl",
            "columnName": "publisher_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publisherThumbnailUrl",
            "columnName": "publisher_thumbnail_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publisherHeroImageUrl",
            "columnName": "publisher_hero_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "whitmoreScore",
            "columnName": "whitmore_score",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "statsUpdatedTimestamp",
            "columnName": "publisher_stats_updated_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedTimestamp",
            "columnName": "updated",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `category_id` INTEGER NOT NULL, `category_name` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "category_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryName",
            "columnName": "category_name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "mechanics",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `mechanic_id` INTEGER NOT NULL, `mechanic_name` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mechanicId",
            "columnName": "mechanic_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mechanicName",
            "columnName": "mechanic_name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "collection_filters",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `starred` INTEGER, `sort_type` INTEGER, `selected_count` INTEGER, `selected_timestamp` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "starred",
            "columnName": "starred",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "sortType",
            "columnName": "sort_type",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "selectedCount",
            "columnName": "selected_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "selectedTimestamp",
            "columnName": "selected_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "collection_filters_details",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `filter_id` INTEGER NOT NULL, `type` INTEGER, `data` TEXT, FOREIGN KEY(`filter_id`) REFERENCES `collection_filters`(`_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "viewId",
            "columnName": "filter_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data",
            "columnName": "data",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "collection_filters",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "filter_id"
            ],
            "referencedColumns": [
              "_id"
            ]
          }
        ]
      },
      {
        "tableName": "games",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `updated` INTEGER, `updated_list` INTEGER NOT NULL, `game_id` INTEGER NOT NULL, `game_name` TEXT NOT NULL, `game_sort_name` TEXT NOT NULL, `year_published` INTEGER, `image_url` TEXT, `thumbnail_url` TEXT, `min_players` INTEGER, `max_players` INTEGER, `playing_time` INTEGER, `min_playing_time` INTEGER, `max_playing_time` INTEGER, `num_of_plays` INTEGER NOT NULL DEFAULT 0, `age` INTEGER, `description` TEXT, `subtype` TEXT, `usersrated` INTEGER, `average` REAL, `bayes_average` REAL, `standard_deviation` REAL, `median` REAL, `number_owned` INTEGER, `number_trading` INTEGER, `number_wanting` INTEGER, `number_wishing` INTEGER, `number_commenting` INTEGER, `number_weighting` INTEGER, `average_weight` REAL, `last_viewed` INTEGER, `starred` INTEGER, `updated_plays` INTEGER, `custom_player_sort` INTEGER, `game_rank` INTEGER, `suggested_player_count_poll_vote_total` INTEGER, `hero_image_url` TEXT, `ICON_COLOR` INTEGER, `DARK_COLOR` INTEGER, `WINS_COLOR` INTEGER, `WINNABLE_PLAYS_COLOR` INTEGER, `ALL_PLAYS_COLOR` INTEGER, `player_counts_best` TEXT, `player_counts_recommended` TEXT, `player_count_nots_recommended` TEXT)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updated",
            "columnName": "updated",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedList",
            "columnName": "updated_list",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameName",
            "columnName": "game_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "gameSortName",
            "columnName": "game_sort_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "yearPublished",
            "columnName": "year_published",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnail_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "minPlayers",
            "columnName": "min_players",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPlayers",
            "columnName": "max_players",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "playingTime",
            "columnName": "playing_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "minPlayingTime",
            "columnName": "min_playing_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPlayingTime",
            "columnName": "max_playing_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "numberOfPlays",
            "columnName": "num_of_plays",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "minimumAge",
            "columnName": "age",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subtype",
            "columnName": "subtype",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "numberOfRatings",
            "columnName": "usersrated",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "average",
            "columnName": "average",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "bayesAverage",
            "columnName": "bayes_average",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "standardDeviation",
            "columnName": "standard_deviation",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "median",
            "columnName": "median",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "numberOfUsersOwned",
            "columnName": "number_owned",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "numberOfUsersTrading",
            "columnName": "number_trading",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "numberOfUsersWanting",
            "columnName": "number_wanting",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "numberOfUsersWishListing",
            "columnName": "number_wishing",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "numberOfComments",
            "columnName": "number_commenting",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "numberOfUsersWeighting",
            "columnName": "number_weighting",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "averageWeight",
            "columnName": "average_weight",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "lastViewedTimestamp",
            "columnName": "last_viewed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isStarred",
            "columnName": "starred",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedPlays",
            "columnName": "updated_plays",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customPlayerSort",
            "columnName": "custom_player_sort",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "gameRank",
            "columnName": "game_rank",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "suggestedPlayerCountPollVoteTotal",
            "columnName": "suggested_player_count_poll_vote_total",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "heroImageUrl",
            "columnName": "hero_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iconColor",
            "columnName": "ICON_COLOR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "darkColor",
            "columnName": "DARK_COLOR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "winsColor",
            "columnName": "WINS_COLOR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "winnablePlaysColor",
            "columnName": "WINNABLE_PLAYS_COLOR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "allPlaysColor",
            "columnName": "ALL_PLAYS_COLOR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "playerCountsBest",
            "columnName": "player_counts_best",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "playerCountsRecommended",
            "columnName": "player_counts_recommended",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "playerCountsNotRecommended",
            "columnName": "player_count_nots_recommended",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [
          {
            "name": "index_games_game_id",
            "unique": true,
            "columnNames": [
              "game_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_games_game_id` ON `${TABLE_NAME}` (`game_id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "game_colors",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `color` TEXT NOT NULL, FOREIGN KEY(`game_id`) REFERENCES `games`(`game_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "games",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "game_id"
            ],
            "referencedColumns": [
              "game_id"
            ]
          }
        ]
      },
      {
        "tableName": "game_polls",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `poll_name` TEXT NOT NULL, `poll_title` TEXT NOT NULL, `poll_total_votes` INTEGER NOT NULL, FOREIGN KEY(`game_id`) REFERENCES `games`(`game_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pollName",
            "columnName": "poll_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pollTitle",
            "columnName": "poll_title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pollTotalVotes",
            "columnName": "poll_total_votes",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "games",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "game_id"
            ],
            "referencedColumns": [
              "game_id"
            ]
          }
        ]
      },
      {
        "tableName": "game_poll_results",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `poll_id` INTEGER NOT NULL, `pollresults_key` TEXT NOT NULL, `pollresults_players` TEXT, `pollresults_sortindex` INTEGER NOT NULL, FOREIGN KEY(`poll_id`) REFERENCES `game_polls`(`_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pollId",
            "columnName": "poll_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pollResultsKey",
            "columnName": "pollresults_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pollResultsPlayers",
            "columnName": "pollresults_players",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pollResultsSortIndex",
            "columnName": "pollresults_sortindex",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "game_polls",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "poll_id"
            ],
            "referencedColumns": [
              "_id"
            ]
          }
        ]
      },
      {
        "tableName": "game_poll_results_result",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `pollresults_id` INTEGER NOT NULL, `pollresultsresult_key` TEXT NOT NULL, `pollresultsresult_level` INTEGER, `pollresultsresult_value` TEXT NOT NULL, `pollresultsresult_votes` INTEGER NOT NULL, `pollresultsresult_sortindex` INTEGER NOT NULL, FOREIGN KEY(`pollresults_id`) REFERENCES `game_poll_results`(`_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pollResultsId",
            "columnName": "pollresults_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pollResultsResultKey",
            "columnName": "pollresultsresult_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pollResultsResultLevel",
            "columnName": "pollresultsresult_level",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pollResultsResultValue",
            "columnName": "pollresultsresult_value",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pollResultsResultVotes",
            "columnName": "pollresultsresult_votes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pollResultsResultSortIndex",
            "columnName": "pollresultsresult_sortindex",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "game_poll_results",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pollresults_id"
            ],
            "referencedColumns": [
              "_id"
            ]
          }
        ]
      },
      {
        "tableName": "game_ranks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `gamerank_id` INTEGER NOT NULL, `gamerank_type` TEXT NOT NULL, `gamerank_name` TEXT NOT NULL, `gamerank_friendly_name` TEXT NOT NULL, `gamerank_value` INTEGER NOT NULL, `gamerank_bayes_average` REAL NOT NULL, FOREIGN KEY(`game_id`) REFERENCES `games`(`game_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameRankId",
            "columnName": "gamerank_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameRankType",
            "columnName": "gamerank_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "gameRankName",
            "columnName": "gamerank_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "gameRankFriendlyName",
            "columnName": "gamerank_friendly_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "gameRankValue",
            "columnName": "gamerank_value",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameRankBayesAverage",
            "columnName": "gamerank_bayes_average",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "games",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "game_id"
            ],
            "referencedColumns": [
              "game_id"
            ]
          }
        ]
      },
      {
        "tableName": "game_suggested_player_count_poll_results",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `player_count` TEXT NOT NULL, `sort_index` INTEGER, `best_vote_count` INTEGER, `recommended_vote_count` INTEGER, `not_recommended_vote_count` INTEGER, `recommendation` INTEGER, FOREIGN KEY(`game_id`) REFERENCES `games`(`game_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playerCount",
            "columnName": "player_count",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sortIndex",
            "columnName": "sort_index",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "bestVoteCount",
            "columnName": "best_vote_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "recommendedVoteCount",
            "columnName": "recommended_vote_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notRecommendedVoteCount",
            "columnName": "not_recommended_vote_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "recommendation",
            "columnName": "recommendation",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "games",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "game_id"
            ],
            "referencedColumns": [
              "game_id"
            ]
          }
        ]
      },
      {
        "tableName": "games_artists",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `artist_id` INTEGER NOT NULL, FOREIGN KEY(`game_id`) REFERENCES `games`(`game_id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`artist_id`) REFERENCES `artists`(`artist_id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "artistId",
            "columnName": "artist_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "games",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "game_id"
            ],
            "referencedColumns": [
              "game_id"
            ]
          },
          {
            "table": "artists",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "artist_id"
            ],
            "referencedColumns": [
              "artist_id"
            ]
          }
        ]
      },
      {
        "tableName": "games_categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `category_id` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "category_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "games_designers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `designer_id` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "designerId",
            "columnName": "designer_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "games_expansions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `expansion_id` INTEGER NOT NULL, `expansion_name` TEXT NOT NULL, `inbound` INTEGER)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expansionId",
            "columnName": "expansion_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expansionName",
            "columnName": "expansion_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inbound",
            "columnName": "inbound",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "games_mechanics",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `mechanic_id` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mechanicId",
            "columnName": "mechanic_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "games_publishers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `game_id` INTEGER NOT NULL, `publisher_id` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "publisherId",
            "columnName": "publisher_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "collection",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `updated` INTEGER, `updated_list` INTEGER, `game_id` INTEGER NOT NULL, `collection_id` INTEGER NOT NULL, `collection_name` TEXT NOT NULL, `collection_sort_name` TEXT NOT NULL, `own` INTEGER NOT NULL, `previously_owned` INTEGER NOT NULL, `for_trade` INTEGER NOT NULL, `want` INTEGER NOT NULL, `want_to_play` INTEGER NOT NULL, `want_to_buy` INTEGER NOT NULL, `wishlist` INTEGER NOT NULL, `wishlist_priority` INTEGER, `preordered` INTEGER NOT NULL, `comment` TEXT, `last_modified` INTEGER, `price_paid_currency` TEXT, `price_paid` REAL, `current_value_currency` TEXT, `current_value` REAL, `quantity` INTEGER, `acquisition_date` TEXT, `acquired_from` TEXT, `private_comment` TEXT, `conditiontext` TEXT, `wantpartslist` TEXT, `haspartslist` TEXT, `wishlistcomment` TEXT, `collection_year_published` INTEGER, `rating` REAL, `collection_thumbnail_url` TEXT, `collection_image_url` TEXT, `status_dirty_timestamp` INTEGER, `rating_dirty_timestamp` INTEGER, `comment_dirty_timestamp` INTEGER, `private_info_dirty_timestamp` INTEGER, `collection_dirty_timestamp` INTEGER, `collection_delete_timestamp` INTEGER, `wishlist_comment_dirty_timestamp` INTEGER, `trade_condition_dirty_timestamp` INTEGER, `want_parts_dirty_timestamp` INTEGER, `has_parts_dirty_timestamp` INTEGER, `collection_hero_image_url` TEXT, `inventory_location` TEXT, FOREIGN KEY(`game_id`) REFERENCES `games`(`game_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedTimestamp",
            "columnName": "updated",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedListTimestamp",
            "columnName": "updated_list",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "gameId",
            "columnName": "game_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "collectionId",
            "columnName": "collection_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "collectionName",
            "columnName": "collection_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "collectionSortName",
            "columnName": "collection_sort_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "statusOwn",
            "columnName": "own",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusPreviouslyOwned",
            "columnName": "previously_owned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusForTrade",
            "columnName": "for_trade",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusWant",
            "columnName": "want",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusWantToPlay",
            "columnName": "want_to_play",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusWantToBuy",
            "columnName": "want_to_buy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusWishlist",
            "columnName": "wishlist",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusWishlistPriority",
            "columnName": "wishlist_priority",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "statusPreordered",
            "columnName": "preordered",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoPricePaidCurrency",
            "columnName": "price_paid_currency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoPricePaid",
            "columnName": "price_paid",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoCurrentValueCurrency",
            "columnName": "current_value_currency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoCurrentValue",
            "columnName": "current_value",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoQuantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoAcquisitionDate",
            "columnName": "acquisition_date",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoAcquiredFrom",
            "columnName": "acquired_from",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoComment",
            "columnName": "private_comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "condition",
            "columnName": "conditiontext",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wantpartsList",
            "columnName": "wantpartslist",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "haspartsList",
            "columnName": "haspartslist",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wishlistComment",
            "columnName": "wishlistcomment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "collectionYearPublished",
            "columnName": "collection_year_published",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "collectionThumbnailUrl",
            "columnName": "collection_thumbnail_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "collectionImageUrl",
            "columnName": "collection_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "statusDirtyTimestamp",
            "columnName": "status_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "ratingDirtyTimestamp",
            "columnName": "rating_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "commentDirtyTimestamp",
            "columnName": "comment_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoDirtyTimestamp",
            "columnName": "private_info_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "collectionDirtyTimestamp",
            "columnName": "collection_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "collectionDeleteTimestamp",
            "columnName": "collection_delete_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "wishlistCommentDirtyTimestamp",
            "columnName": "wishlist_comment_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tradeConditionDirtyTimestamp",
            "columnName": "trade_condition_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "wantPartsDirtyTimestamp",
            "columnName": "want_parts_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "hasPartsDirtyTimestamp",
            "columnName": "has_parts_dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "collectionHeroImageUrl",
            "columnName": "collection_hero_image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "privateInfoInventoryLocation",
            "columnName": "inventory_location",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "games",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "game_id"
            ],
            "referencedColumns": [
              "game_id"
            ]
          }
        ]
      },
      {
        "tableName": "play_players",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `_play_id` INTEGER NOT NULL, `user_name` TEXT, `user_id` INTEGER, `name` TEXT, `start_position` TEXT, `color` TEXT, `score` TEXT, `new` INTEGER, `rating` REAL, `win` INTEGER)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "internalPlayId",
            "columnName": "_play_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "user_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startingPosition",
            "columnName": "start_position",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isNew",
            "columnName": "new",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "isWin",
            "columnName": "win",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "player_colors",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `player_type` INTEGER NOT NULL, `player_name` TEXT NOT NULL, `player_color` TEXT NOT NULL, `player_color_sort` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playerType",
            "columnName": "player_type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playerName",
            "columnName": "player_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "playerColor",
            "columnName": "player_color",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "playerColorSortOrder",
            "columnName": "player_color_sort",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "plays",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `updated_list` INTEGER NOT NULL, `play_id` INTEGER, `date` TEXT NOT NULL, `quantity` INTEGER NOT NULL, `length` INTEGER NOT NULL, `incomplete` INTEGER NOT NULL, `no_win_stats` INTEGER NOT NULL, `location` TEXT, `comments` TEXT, `start_time` INTEGER, `player_count` INTEGER, `sync_hash_code` INTEGER, `item_name` TEXT NOT NULL, `object_id` INTEGER NOT NULL, `delete_timestamp` INTEGER, `update_timestamp` INTEGER, `dirty_timestamp` INTEGER)",
        "fields": [
          {
            "fieldPath": "internalId",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncTimestamp",
            "columnName": "updated_list",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playId",
            "columnName": "play_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "length",
            "columnName": "length",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "incomplete",
            "columnName": "incomplete",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "noWinStats",
            "columnName": "no_win_stats",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comments",
            "columnName": "comments",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startTime",
            "columnName": "start_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "playerCount",
            "columnName": "player_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "syncHashCode",
            "columnName": "sync_hash_code",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "itemName",
            "columnName": "item_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "objectId",
            "columnName": "object_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleteTimestamp",
            "columnName": "delete_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updateTimestamp",
            "columnName": "update_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dirtyTimestamp",
            "columnName": "dirty_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`username` TEXT NOT NULL, `first_name` TEXT, `last_name` TEXT, `avatar_url` TEXT, `play_nickname` TEXT, `buddy_flag` INTEGER, `sync_hash_code` INTEGER, `updated_list_timestamp` INTEGER, `updated_detail_timestamp` INTEGER, PRIMARY KEY(`username`))",
        "fields": [
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "firstName",
            "columnName": "first_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "last_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatarUrl",
            "columnName": "avatar_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "playNickname",
            "columnName": "play_nickname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "buddyFlag",
            "columnName": "buddy_flag",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "syncHashCode",
            "columnName": "sync_hash_code",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedListDate",
            "columnName": "updated_list_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedDetailDate",
            "columnName": "updated_detail_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "username"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '30c9475b67dabe0e6fa7ef6a3c9c15c7')"
    ]
  }
}