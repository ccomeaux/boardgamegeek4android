package com.boardgamegeek.db.model

data class GameForUpsert(
    val gameId: Int,
    val gameName: String,
    val gameSortName: String,
    val yearPublished: Int?,
    val imageUrl: String?,
    val thumbnailUrl: String?,
    val minPlayers: Int?,
    val maxPlayers: Int?,
    val playingTime: Int?,
    val minPlayingTime: Int?,
    val maxPlayingTime: Int?,
    val minimumAge: Int?,
    val description: String?,
    val subtype: String?,
    val numberOfRatings: Int?,
    val average: Double?,
    val bayesAverage: Double?,
    val standardDeviation: Double?,
    val median: Double?,
    val numberOfUsersOwned: Int?,
    val numberOfUsersTrading: Int?,
    val numberOfUsersWanting: Int?,
    val numberOfUsersWishListing: Int?,
    val numberOfComments: Int?,
    val numberOfUsersWeighting: Int?,
    val averageWeight: Double?,
    val overallRank: Int?,
    val suggestedPlayerCountPollVoteTotal: Int?,
    val playerCountsBest: String?,
    val playerCountsRecommended: String?,
    val playerCountsNotRecommended: String?,
    val updated: Long?,
    val updatedList: Long,
    val ranks: List<GameRankLocal>?,
    val polls: List<GamePollLocal>?,
    val playerPoll: List<GameSuggestedPlayerCountPollResultsLocal>?,
    val designers: List<Pair<Int, String>>?,
    val artists: List<Pair<Int, String>>?,
    val publishers: List<Pair<Int, String>>?,
    val categories: List<Pair<Int, String>>?,
    val mechanics: List<Pair<Int, String>>?,
    val expansions: List<Triple<Int, String, Boolean>>?,
) {
    override fun toString() = "$gameName [$gameId]"
}
